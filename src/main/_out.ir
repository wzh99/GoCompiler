program main

func _global(): 
_B0_Start:
	return 

func test4(_env: *void): 
_B1_Start:
	jump _B5_ForCond
_B5_ForCond:
	phi (_B1_Start -> 0: i64, _B3_ForPost -> -2: i64) => $_s1_d.2: i64
	phi (_B3_ForPost -> $_s2_i.3: i64, _B1_Start -> 1: i64) => $_s2_i.2: i64
	phi (_B1_Start -> 0: i64, _B3_ForPost -> $_s1_f.4: i64) => $_s1_f.2: i64
	le $_s2_i.2: i64, 100: i64 => $_t2.2: i1
	branch $_t2.2: i1 ? _B2_ForBody : _B12_EdgeSplit
_B2_ForBody:
	mod $_s2_i.2: i64, 2: i64 => $_t6.2: i64
	eq $_t6.2: i64, 0: i64 => $_t7.2: i1
	branch $_t7.2: i1 ? _B6_IfThen : _B8_IfFalse
_B12_EdgeSplit:
	jump _B4_ForNext
_B6_IfThen:
	jump _B7_IfNext
_B8_IfFalse:
	jump _B7_IfNext
_B4_ForNext:
	phi (_B12_EdgeSplit -> 0: i64, _B9_IfThen -> 0: i64) => $_s1_e.5: i64
	phi (_B12_EdgeSplit -> $_s1_d.2: i64, _B9_IfThen -> -2: i64) => $_s1_d.6: i64
	phi (_B12_EdgeSplit -> $_s1_f.2: i64, _B9_IfThen -> $_s1_f.4: i64) => $_s1_f.5: i64
	add $_s1_d.6: i64, $_s1_e.5: i64 => $_t17.1: i64
	add $_t17.1: i64, $_s1_f.5: i64 => $_t18.1: i64
	return $_t18.1: i64
_B7_IfNext:
	phi (_B6_IfThen -> $_s1_f.2: i64, _B8_IfFalse -> 4: i64) => $_s1_f.4: i64
	add $_s2_i.2: i64, 1: i64 => $_s2_i.3: i64
	jump _B13_EdgeSplit
_B13_EdgeSplit:
	jump _B10_IfNext
_B10_IfNext:
	jump _B3_ForPost
_B3_ForPost:
	jump _B5_ForCond

